[{"/Users/noura/random-games/src/index.js":"1","/Users/noura/random-games/src/App.js":"2","/Users/noura/random-games/src/firebase.js":"3","/Users/noura/random-games/src/Components/Wink.js":"4","/Users/noura/random-games/src/Components/InvalidLink.js":"5","/Users/noura/random-games/src/Components/UserContext.js":"6","/Users/noura/random-games/src/Components/GuessTheThing.js":"7","/Users/noura/random-games/src/Components/Dares.js":"8","/Users/noura/random-games/src/Components/GuessWho.js":"9","/Users/noura/random-games/src/Components/DareToDo.js":"10","/Users/noura/random-games/src/Components/Guess.js":"11","/Users/noura/random-games/src/Components/FirstToDo.js":"12","/Users/noura/random-games/src/Components/NavList.js":"13","/Users/noura/random-games/src/Components/InfoModal.js":"14"},{"size":306,"mtime":1610376719933,"results":"15","hashOfConfig":"16"},{"size":1700,"mtime":1610376719922,"results":"17","hashOfConfig":"16"},{"size":495,"mtime":1610212047476,"results":"18","hashOfConfig":"16"},{"size":3118,"mtime":1610212040937,"results":"19","hashOfConfig":"16"},{"size":295,"mtime":1610035771545,"results":"20","hashOfConfig":"16"},{"size":349,"mtime":1610213114035,"results":"21","hashOfConfig":"16"},{"size":2091,"mtime":1610376719928,"results":"22","hashOfConfig":"16"},{"size":1545,"mtime":1610386442245,"results":"23","hashOfConfig":"16"},{"size":2126,"mtime":1610376719929,"results":"24","hashOfConfig":"16"},{"size":1804,"mtime":1610376719923,"results":"25","hashOfConfig":"16"},{"size":1189,"mtime":1610386946020,"results":"26","hashOfConfig":"16"},{"size":3390,"mtime":1610376719926,"results":"27","hashOfConfig":"16"},{"size":1476,"mtime":1610385395588,"results":"28","hashOfConfig":"16"},{"size":3955,"mtime":1610382448048,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kol2s2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noura/random-games/src/index.js",[],["61","62"],"/Users/noura/random-games/src/App.js",[],"/Users/noura/random-games/src/firebase.js",[],"/Users/noura/random-games/src/Components/Wink.js",["63","64"],"import React, { Component } from 'react'\nimport { Link, LinkNav } from 'react-router-dom'\n\nclass Wink extends Component {\n    state = {\n        names: ['', '', ''],\n        characters: [\"شايب\", \"ولد\"],\n        display: \"\",\n        display2: \"block\",\n        start: false,\n        namesOutput: null,\n        index: 0,\n        playerCard: null\n\n    }\n\n    addPlayer = (e) => {\n        e.preventDefault()\n\n        this.setState({\n            names: [...this.state.names, \"\"]\n        })\n    }\n\n    handleChange = (e, index) => {\n        e.preventDefault()\n        this.state.names[index] = e.target.value\n        this.setState({ names: this.state.names })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        //hide form\n        this.setState({\n            display: \"none\"\n        })\n\n        //random\n        let leng = this.state.names.length - 2\n        for (let i = 0; i < leng; i++) {\n            this.setState((prevState) => {\n                return {\n                    characters: [...prevState.characters, \"بنت\"],\n                    display: \"none\"\n                }\n            })\n        }\n        this.setState({\n            start: true\n        })\n    }\n\n    randomPick = () => {\n        let characters = [...this.state.characters]\n        characters = characters.sort(() => Math.random() - 0.5)\n        let names = [...this.state.names]\n        const output = characters.map((ele, index) => {\n            return <div className=\"card\">\n                أنت يا {names[index]}\n                &nbsp; ‏تراك {characters[index]}\n            </div>\n        })\n        this.setState({ namesOutput: output })\n\n    }\n\n    handleClick = e => {\n        e.preventDefault()\n        this.setState(prevState => {\n            return { index: prevState.index + 1, playerCard: prevState.namesOutput[this.state.index] }\n        })\n        if (this.state.index === this.state.namesOutput.length - 1) {\n            this.setState({ display2: 'none' })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Link to=\"/\"> رجوع</Link>\n                <form onSubmit={this.handleSubmit} style={{ display: this.state.display }}>\n\n                    {\n                        this.state.names.map((name, index) => {\n                            return (\n                                <div key={index}>\n                                    <input type=\"text\" value={name} onChange={(e) => this.handleChange(e, index)}></input>\n                                </div>\n                            )\n                        })\n                    }\n\n\n                    <button onClick={(e) => this.addPlayer(e)}>لاعب جديد</button>\n                    <button type=\"submit\">يلا نلعب</button>\n\n                </form>\n                <button onClick={this.randomPick}>Test</button>\n                <br />\n                <button onClick={this.handleClick} style={{ display: this.state.display2 }}>Click</button>\n                <div>\n                    {this.state.playerCard}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Wink;\n","/Users/noura/random-games/src/Components/InvalidLink.js",[],"/Users/noura/random-games/src/Components/UserContext.js",[],"/Users/noura/random-games/src/Components/GuessTheThing.js",[],"/Users/noura/random-games/src/Components/Dares.js",[],"/Users/noura/random-games/src/Components/GuessWho.js",["65"],"import React, { Component } from 'react'\nimport UserContext from './UserContext'\nimport { Link } from 'react-router-dom'\nimport InfoModal from './InfoModal'\n\nclass GuessWho extends Component {\n    static contextType = UserContext;\n    state = {\n        guessWho: [],\n        items: null,\n        index: -1,\n        display: '',\n        modalShow: false\n    }\n\n    //bring the data from context\n    componentDidUpdate() {\n        let data = this.context;\n        if (data.guess) {\n            if (this.state.guessWho.length === 0)\n                this.setState({ guessWho: data.guess.guessWho.sort(() => Math.random() - 0.5) })\n        }\n    }\n\n    //next guess button\n    handleClick = e => {\n        e.preventDefault()\n\n        this.setState(prevState => {\n            let display = prevState.display\n            if (prevState.index === prevState.guessWho.length) {\n                display = \"none\"\n            }\n            return {\n                index: prevState.index + 1,\n                display: display\n            }\n        })\n\n    }\n\n    setModalShow = (toggleShow) => {\n        this.setState({ modalShow: toggleShow })\n    }\n\n    render() {\n        // const [modalShow, setModalShow] = React.useState(false);\n        let output\n        output = this.state.guessWho.map((item, index) => {\n            return <div key={index}> {item.name} <img src={item.img} /> </div>\n        })\n        return (\n            <>\n                <div className=\"row justify-content-start\">\n                    <button className=\"info-btn main-games green col-1 text-right\" onClick={() => this.setModalShow(true)}>تفضل هنا</button>\n                </div>\n                <Link to=\"/guess\"> رجوع</Link>\n                <button onClick={this.handleClick} style={{ display: this.state.display }}>التالي</button>\n                <div>\n                    {output[this.state.index]}\n                </div>\n\n                <InfoModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                />\n            </>\n        );\n    }\n}\n\n\nexport default GuessWho;\n","/Users/noura/random-games/src/Components/DareToDo.js",[],"/Users/noura/random-games/src/Components/Guess.js",[],"/Users/noura/random-games/src/Components/FirstToDo.js",[],"/Users/noura/random-games/src/Components/NavList.js",[],"/Users/noura/random-games/src/Components/InfoModal.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":16,"nodeType":"72","messageId":"73","endLine":2,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":27,"column":9,"nodeType":"76","endLine":27,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":50,"column":50,"nodeType":"79","endLine":50,"endColumn":72},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'LinkNav' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]