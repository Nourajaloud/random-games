[{"/Users/noura/random-games/src/index.js":"1","/Users/noura/random-games/src/App.js":"2","/Users/noura/random-games/src/Components/Dares.js":"3","/Users/noura/random-games/src/Components/Wink.js":"4","/Users/noura/random-games/src/Components/Guess.js":"5","/Users/noura/random-games/src/Components/NavList.js":"6","/Users/noura/random-games/src/Components/InvalidLink.js":"7","/Users/noura/random-games/src/Components/DareToDo.js":"8","/Users/noura/random-games/src/Components/FirstToDo.js":"9","/Users/noura/random-games/src/Components/GuessTheThing.js":"10","/Users/noura/random-games/src/Components/GuessWho.js":"11","/Users/noura/random-games/src/firebase.js":"12","/Users/noura/random-games/src/Components/UserContext.js":"13"},{"size":301,"mtime":1610272175844,"results":"14","hashOfConfig":"15"},{"size":1240,"mtime":1610217500126,"results":"16","hashOfConfig":"15"},{"size":842,"mtime":1610272170854,"results":"17","hashOfConfig":"15"},{"size":3118,"mtime":1610212040937,"results":"18","hashOfConfig":"15"},{"size":724,"mtime":1610272164781,"results":"19","hashOfConfig":"15"},{"size":1061,"mtime":1610272168525,"results":"20","hashOfConfig":"15"},{"size":295,"mtime":1610035771545,"results":"21","hashOfConfig":"15"},{"size":1251,"mtime":1610217446749,"results":"22","hashOfConfig":"15"},{"size":2363,"mtime":1610272162019,"results":"23","hashOfConfig":"15"},{"size":1660,"mtime":1610212047475,"results":"24","hashOfConfig":"15"},{"size":1636,"mtime":1610212047476,"results":"25","hashOfConfig":"15"},{"size":495,"mtime":1610212047476,"results":"26","hashOfConfig":"15"},{"size":349,"mtime":1610213114035,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kol2s2",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/noura/random-games/src/index.js",[],"/Users/noura/random-games/src/App.js",["59"],"import React, { Component } from 'react'\nimport Dares from './Components/Dares'\nimport Guess from './Components/Guess'\nimport Wink from './Components/Wink'\nimport FirstToDo from './Components/FirstToDo'\nimport DareToDo from './Components/DareToDo'\nimport GuessWho from './Components/GuessWho'\nimport GuessTheThing from './Components/GuessTheThing'\nimport NavList from './Components/NavList'\nimport InvalidLink from './Components/InvalidLink'\n\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={NavList} />\n            <Route path=\"/dares\" component={Dares} />\n            <Route path=\"/guess\" component={Guess} />\n            <Route path=\"/wink\" component={Wink} />\n            <Route path=\"/firstToDo\" component={FirstToDo} />\n            <Route path=\"/dareToDo\" component={DareToDo} />\n            <Route path=\"/guessWho\" component={GuessWho} />\n            <Route path=\"/guessTheThing\" component={GuessTheThing} />\n            <Route path=\"/:Test\" component={InvalidLink} />\n          </Switch>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nexport default App;\n",["60","61"],"/Users/noura/random-games/src/Components/Dares.js",[],"/Users/noura/random-games/src/Components/Wink.js",["62","63"],"import React, { Component } from 'react'\nimport { Link, LinkNav } from 'react-router-dom'\n\nclass Wink extends Component {\n    state = {\n        names: ['', '', ''],\n        characters: [\"شايب\", \"ولد\"],\n        display: \"\",\n        display2: \"block\",\n        start: false,\n        namesOutput: null,\n        index: 0,\n        playerCard: null\n\n    }\n\n    addPlayer = (e) => {\n        e.preventDefault()\n\n        this.setState({\n            names: [...this.state.names, \"\"]\n        })\n    }\n\n    handleChange = (e, index) => {\n        e.preventDefault()\n        this.state.names[index] = e.target.value\n        this.setState({ names: this.state.names })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        //hide form\n        this.setState({\n            display: \"none\"\n        })\n\n        //random\n        let leng = this.state.names.length - 2\n        for (let i = 0; i < leng; i++) {\n            this.setState((prevState) => {\n                return {\n                    characters: [...prevState.characters, \"بنت\"],\n                    display: \"none\"\n                }\n            })\n        }\n        this.setState({\n            start: true\n        })\n    }\n\n    randomPick = () => {\n        let characters = [...this.state.characters]\n        characters = characters.sort(() => Math.random() - 0.5)\n        let names = [...this.state.names]\n        const output = characters.map((ele, index) => {\n            return <div className=\"card\">\n                أنت يا {names[index]}\n                &nbsp; ‏تراك {characters[index]}\n            </div>\n        })\n        this.setState({ namesOutput: output })\n\n    }\n\n    handleClick = e => {\n        e.preventDefault()\n        this.setState(prevState => {\n            return { index: prevState.index + 1, playerCard: prevState.namesOutput[this.state.index] }\n        })\n        if (this.state.index === this.state.namesOutput.length - 1) {\n            this.setState({ display2: 'none' })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Link to=\"/\"> رجوع</Link>\n                <form onSubmit={this.handleSubmit} style={{ display: this.state.display }}>\n\n                    {\n                        this.state.names.map((name, index) => {\n                            return (\n                                <div key={index}>\n                                    <input type=\"text\" value={name} onChange={(e) => this.handleChange(e, index)}></input>\n                                </div>\n                            )\n                        })\n                    }\n\n\n                    <button onClick={(e) => this.addPlayer(e)}>لاعب جديد</button>\n                    <button type=\"submit\">يلا نلعب</button>\n\n                </form>\n                <button onClick={this.randomPick}>Test</button>\n                <br />\n                <button onClick={this.handleClick} style={{ display: this.state.display2 }}>Click</button>\n                <div>\n                    {this.state.playerCard}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Wink;\n","/Users/noura/random-games/src/Components/Guess.js",[],"/Users/noura/random-games/src/Components/NavList.js",[],"/Users/noura/random-games/src/Components/InvalidLink.js",[],"/Users/noura/random-games/src/Components/DareToDo.js",[],"/Users/noura/random-games/src/Components/FirstToDo.js",[],"/Users/noura/random-games/src/Components/GuessTheThing.js",[],"/Users/noura/random-games/src/Components/GuessWho.js",["64"],"import React, { Component } from 'react'\n// import data from './DataSource'\nimport firebase from '.././firebase.js';\nimport { Link } from 'react-router-dom'\n\n\nclass GuessWho extends Component {\n    state = {\n        guessWho: [],\n        items: null,\n        index: 0,\n        display: '',\n        playerCard: null\n    }\n\n    componentDidMount() {\n        const itemsRef = firebase.database().ref('data');\n        itemsRef.on('value', (snapshot) => {\n            let data = snapshot.val();\n            this.setState({ guessWho: data.guess.guessWho.sort(() => Math.random() - 0.5) })\n        });\n    }\n\n    handleClick = e => {\n        e.preventDefault()\n\n        this.setState(prevState => {\n            return { index: prevState.index + 1, playerCard: prevState.items[this.state.index] }\n        })\n        if (this.state.index === this.state.items.length - 1) {\n            this.setState({ display: 'none' })\n        }\n    }\n\n    handleStart = e => {\n        e.preventDefault()\n        let output\n        output = this.state.guessWho.map((item, index) => {\n            return <div key={index}> {item.name} <img src={item.img} /> </div>\n        })\n        this.setState({ items: output })\n    }\n\n    render() {\n\n        return (\n            <>\n                <Link to=\"/guess\"> رجوع</Link>\n                <button onClick={this.handleStart}>يلا نبدأ</button>\n                <button onClick={this.handleClick} style={{ display: this.state.display }}>التالي</button>\n                <div>\n                    {this.state.playerCard}\n                </div>\n            </>\n        );\n    }\n}\n\n\nexport default GuessWho;\n","/Users/noura/random-games/src/firebase.js",[],"/Users/noura/random-games/src/Components/UserContext.js",[],["65","66"],{"ruleId":"67","severity":1,"message":"68","line":12,"column":40,"nodeType":"69","messageId":"70","endLine":12,"endColumn":44},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":27,"column":9,"nodeType":"78","endLine":27,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":39,"column":50,"nodeType":"81","endLine":39,"endColumn":72},{"ruleId":"71","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'LinkNav' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["84"],["85"],"no-global-assign","no-unsafe-negation"]