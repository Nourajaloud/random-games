[{"/Users/noura/random-games/src/index.js":"1","/Users/noura/random-games/src/App.js":"2","/Users/noura/random-games/src/firebase.js":"3","/Users/noura/random-games/src/Components/Guess.js":"4","/Users/noura/random-games/src/Components/GuessTheThing.js":"5","/Users/noura/random-games/src/Components/InvalidLink.js":"6","/Users/noura/random-games/src/Components/UserContext.js":"7","/Users/noura/random-games/src/Components/GuessWho.js":"8","/Users/noura/random-games/src/Components/FirstToDo.js":"9","/Users/noura/random-games/src/Components/Dares.js":"10","/Users/noura/random-games/src/Components/Wink.js":"11","/Users/noura/random-games/src/Components/NavList.js":"12","/Users/noura/random-games/src/Components/DareToDo.js":"13","/Users/noura/random-games/src/Components/InfoModal.js":"14","/Users/noura/random-games/src/Components/Spinner.js":"15"},{"size":306,"mtime":1610376719933,"results":"16","hashOfConfig":"17"},{"size":1700,"mtime":1610463745688,"results":"18","hashOfConfig":"17"},{"size":495,"mtime":1610212047476,"results":"19","hashOfConfig":"17"},{"size":1410,"mtime":1610462816886,"results":"20","hashOfConfig":"17"},{"size":5119,"mtime":1610465352188,"results":"21","hashOfConfig":"17"},{"size":295,"mtime":1610035771545,"results":"22","hashOfConfig":"17"},{"size":349,"mtime":1610213114035,"results":"23","hashOfConfig":"17"},{"size":4797,"mtime":1610462816887,"results":"24","hashOfConfig":"17"},{"size":3326,"mtime":1610462816885,"results":"25","hashOfConfig":"17"},{"size":1580,"mtime":1610462816884,"results":"26","hashOfConfig":"17"},{"size":5801,"mtime":1610462816888,"results":"27","hashOfConfig":"17"},{"size":1462,"mtime":1610441481649,"results":"28","hashOfConfig":"17"},{"size":3899,"mtime":1610462816884,"results":"29","hashOfConfig":"17"},{"size":3955,"mtime":1610441470793,"results":"30","hashOfConfig":"17"},{"size":442,"mtime":1610462816888,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1kol2s2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"/Users/noura/random-games/src/index.js",[],["66","67"],"/Users/noura/random-games/src/App.js",[],"/Users/noura/random-games/src/firebase.js",[],"/Users/noura/random-games/src/Components/Guess.js",[],"/Users/noura/random-games/src/Components/GuessTheThing.js",["68"],"/Users/noura/random-games/src/Components/InvalidLink.js",[],"/Users/noura/random-games/src/Components/UserContext.js",[],"/Users/noura/random-games/src/Components/GuessWho.js",["69"],"import React, { Component } from 'react'\nimport UserContext from './UserContext'\nimport { Link } from 'react-router-dom'\nimport InfoModal from './InfoModal'\nimport '../styles/card.css'\nimport logo from '../logo.svg'\n\nclass GuessWho extends Component {\n    static contextType = UserContext;\n    state = {\n        guessWho: [],\n        items: null,\n        index: -1,\n        zIndex: \"\",\n        display: '',\n        descDisplay: \"\",\n        modalShow: false\n    }\n\n    //bring the data from context\n    componentDidUpdate() {\n        let data = this.context;\n        if (data.guess) {\n            if (this.state.guessWho.length === 0)\n                this.setState({ guessWho: data.guess.guessWho.sort(() => Math.random() - 0.5) })\n        }\n    }\n\n    //next guess button\n    // handleClick = e => {\n    //     e.preventDefault()\n\n    //     this.setState(prevState => {\n    //         let display = prevState.display\n    //         if (prevState.index === prevState.guessWho.length) {\n    //             display = \"none\"\n    //         }\n    //         return {\n    //             index: prevState.index + 1,\n    //             display: display\n    //         }\n    //     })\n\n    // }\n    handleClick = e => {\n        e.preventDefault()\n        this.setState(prevState => {\n            let display = prevState.display\n            if (prevState.index === prevState.guessWho.length) {\n                display = \"none\"\n            }\n            return {\n                index: prevState.index + 1,\n                display: display,\n                thirdClass: \"animate__animated animate__fadeOutTopRight animate__faster\",\n                zIndex: 9,\n                descDisplay: \"none\"\n            }\n        })\n        setTimeout(() => {\n            this.setState({\n                thirdClass: \"animate__animated animate__fadeInTopRight animate__faster\",\n                zIndex: 100\n            })\n        }, 300)\n    }\n\n    setModalShow = (toggleShow) => {\n        this.setState({ modalShow: toggleShow })\n    }\n\n    render() {\n        // const [modalShow, setModalShow] = React.useState(false);\n        let output\n        output = this.state.guessWho.map((item, index) => {\n            return <div key={index}>\n                <img className=\"card-img\" src={item.img} />\n\n                <div>{item.name}</div>\n            </div>\n        })\n        return (\n            <>\n\n                <div className=\"row justify-content-between\">\n                    <button className=\"info-btn\" onClick={() => this.setModalShow(true)}>اعرفنا اكثر</button>\n                    <Link className=\"return-btn\" to=\"/guess\"> تبي ترجع؟</Link>\n                </div>\n\n                <h1 className=\"first-do-title\">حزر فزر :</h1>\n                <div className=\"cardContainer row justify-content-center\" >\n                    <div className=\"card\" >\n                        <p style={{ display: this.state.descDisplay }}>التعليمات:</p>\n                        <p style={{ display: this.state.descDisplay }}>\n                            مافيها شروط بس حاول تلمح لخويك او للباقين مين شفت وخلهم يجيبونها صح.\n\n                        </p>\n\n                    </div>\n                    <div className={`secound secound-img ${this.state.thirdClass}`} style={{ zIndex: this.state.zIndex }}>\n                        <p>  {output[this.state.index]} </p>\n\n                        <img src={logo} className=\"card-ship guess-ship\" alt=\"اللوقو\" />\n\n                    </div>\n                </div>\n                <button className=\"hvr-bob game-buttons\" onClick={this.handleClick} style={{ display: this.state.display }}>التالي</button>\n\n                {/* <div className=\"row justify-content-start\">\n                    <button className=\"info-btn col-1 text-right\" onClick={() => this.setModalShow(true)}>اعرفنا اكثر</button>\n                    <Link to=\"/guess\" className=\"return-btn\">تبي ترجع</Link>\n                </div>\n\n                <h1 className=\"first-do-title\"> حزر فزر</h1>\n                <div className=\"cardContainer row justify-content-center\" >\n                    <div className=\"card \">\n                        {output[this.state.index]}\n                        <img src={logo} className=\"card-ship\" alt=\"اللوقو\" />\n                    </div>\n\n                </div>\n                <button className=\"hvr-bob game-buttons\" onClick={this.handleClick} style={{ display: this.state.display }}>\n                    التالي\n                </button> */}\n\n                <InfoModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                />\n            </>\n        );\n    }\n}\n\n\nexport default GuessWho;\n","/Users/noura/random-games/src/Components/FirstToDo.js",[],"/Users/noura/random-games/src/Components/Dares.js",[],"/Users/noura/random-games/src/Components/Wink.js",["70"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport InfoModal from './InfoModal'\nimport '../styles/buttons.css'\nimport '../styles/card.css'\nimport logo from '../logo.svg'\n\nclass Wink extends Component {\n    state = {\n        names: ['', '', ''],\n        characters: [\"شايب\", \"ولد\"],\n        showForm: true,\n        index: -1,\n        descDisplay: \"\",\n        thirdClass: \"\",\n        zIndex: \"\",\n        modalShow: false,\n        indexOfNames: 0,\n    }\n\n    addPlayer = (e) => {\n        e.preventDefault()\n\n        this.setState({\n            names: [...this.state.names, \"\"]\n        })\n    }\n\n    handleChange = (e, index) => {\n        e.preventDefault()\n        this.state.names[index] = e.target.value\n        this.setState({ names: this.state.names })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        //random\n        let leng = this.state.names.length - 2\n        for (let i = 0; i < leng; i++) {\n            this.setState((prevState) => {\n                return {\n                    characters: [...prevState.characters, \"بنت\"].sort(() => Math.random() - 0.5),\n                    showForm: false\n                }\n            })\n        }\n    }\n\n    handleClick = e => {\n        e.preventDefault()\n        this.setState(prevState => {\n            return {\n                index: prevState.index + 1,\n                indexOfNames: prevState.indexOfNames + 1,\n                thirdClass: \"animate__animated animate__fadeOutTopRight animate__faster\",\n                zIndex: 9,\n                descDisplay: \"none\",\n            }\n        })\n        setTimeout(() => {\n            this.setState({\n                thirdClass: \"animate__animated animate__fadeInTopRight animate__faster\",\n                zIndex: 100\n            })\n        }, 300)\n    }\n\n    handleFlip = e => {\n        e.preventDefault()\n        this.setState({ thirdClass: \"animate__animated animate__flipOutY\" })\n    }\n\n    setModalShow = (toggleShow) => {\n        this.setState({ modalShow: toggleShow })\n    }\n    render() {\n        let output\n        let characters = [...this.state.characters]\n        let names = [...this.state.names]\n        output = characters.map((ele, index) => {\n            return <div>\n                أنت يا {names[index]}\n                &nbsp; ‏تراك {characters[index]}\n            </div>\n        })\n\n        return (\n            <div className=\"page-container\">\n                <div className=\"row justify-content-between\">\n                    <button className=\"info-btn\" onClick={() => this.setModalShow(true)}>اعرفنا اكثر</button>\n                    <Link to=\"/\" className=\"return-btn\">تبي ترجع</Link>\n                </div>\n                {this.state.showForm ?\n                    <form onSubmit={this.handleSubmit}>\n                        {\n                            this.state.names.map((name, index) => {\n                                return (\n                                    <div key={index}>\n                                        <input className=\"playersName\" type=\"text\" value={name} onChange={(e) => this.handleChange(e, index)} placeholder=\"اسم اللاعب\"></input>\n                                    </div>\n                                )\n                            })\n                        }\n                        <i className=\"fas fa-user-plus\" onClick={(e) => this.addPlayer(e)}></i>\n                        <button className=\"game-buttons d-block\" style={{ margin: \"0 auto\" }} type=\"submit\">يلا نلعب</button>\n\n                    </form>\n                    : \"\"}\n\n                {!this.state.showForm ?\n                    <>\n                        <h2 className=\"logo-name\">\n                            {this.state.indexOfNames !== this.state.names.length ?\n                                ` عط الجوال ${this.state.names[this.state.indexOfNames]}`\n                                : \"\"}\n                        </h2>\n                        <div className=\"cardContainer row justify-content-center\">\n                            <div className=\"card\">\n                                <p style={{ display: this.state.descDisplay }}>التعليمات:</p>\n\n\n                                <ul style={{ display: this.state.descDisplay }}>\n\n                                    <li>  <b>الشايب :</b> حاول تقفط الولد قبل لا يغمز لكل البنات</li>\n                                    <li><b>الولد :</b>  حاول ماتبين انك ولد عشان مايقفطك الشايب وتقدر تختم البنات بغمزتك</li>\n                                    <li><b>البنت :</b> اذا غمز لك الولد لاتبينين مين هو بس قولي انغمز لي</li>\n                                </ul>\n\n\n                            </div>\n                            <div className={`secound ${this.state.thirdClass}`} style={{ zIndex: this.state.zIndex }} onClick={this.handleFlip}>\n                                <p >{output[this.state.index]}&nbsp; لا تنسى تقلب البطاقة</p>\n                                <img src={logo} className=\"card-ship\" alt=\"اللوقو\" />\n\n                            </div>\n                        </div>\n                        {this.state.index !== this.state.names.length - 1 ?\n                            <button className=\"hvr-bob game-buttons\" onClick={this.handleClick} >التالي</button>\n                            : \"\"\n                        }\n                    </>\n                    : \"\"\n                }\n                <InfoModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Wink;\n","/Users/noura/random-games/src/Components/NavList.js",[],"/Users/noura/random-games/src/Components/DareToDo.js",[],"/Users/noura/random-games/src/Components/InfoModal.js",[],"/Users/noura/random-games/src/Components/Spinner.js",["71"],"import React, { Component } from 'react'\nimport logo from '../logo.svg'\n\nclass Spinner extends Component {\n    render() {\n        return (\n            <div style={{ height: \"800px\" }}>\n                <h1 className=\"logo-name\">ثواني...</h1>\n                <img src={logo} className=\"animate__infinite animate__animated animate__bounceInUp animate__slow\" width=\"250px\" ></img>\n            </div>\n        );\n    }\n}\nexport default Spinner",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":122,"column":30,"nodeType":"78","messageId":"79","endLine":122,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":77,"column":17,"nodeType":"82","endLine":77,"endColumn":60},{"ruleId":"83","severity":1,"message":"84","line":29,"column":9,"nodeType":"85","endLine":29,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":9,"column":17,"nodeType":"82","endLine":9,"endColumn":130},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'output' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]