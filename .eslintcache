[{"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\index.js":"1","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\App.js":"2","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\firebase.js":"3","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Dares.js":"4","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Guess.js":"5","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\DareToDo.js":"6","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\NavList.js":"7","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\GuessWho.js":"8","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\FirstToDo.js":"9","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\GuessTheThing.js":"10","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\UserContext.js":"11","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\InvalidLink.js":"12","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Wink.js":"13","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\InfoModal.js":"14"},{"size":319,"mtime":1610363539204,"results":"15","hashOfConfig":"16"},{"size":1747,"mtime":1610278982693,"results":"17","hashOfConfig":"16"},{"size":509,"mtime":1610264013803,"results":"18","hashOfConfig":"16"},{"size":1651,"mtime":1610404435775,"results":"19","hashOfConfig":"16"},{"size":1470,"mtime":1610404114609,"results":"20","hashOfConfig":"16"},{"size":1881,"mtime":1610398165293,"results":"21","hashOfConfig":"16"},{"size":1546,"mtime":1610398165423,"results":"22","hashOfConfig":"16"},{"size":2221,"mtime":1610398165419,"results":"23","hashOfConfig":"16"},{"size":3460,"mtime":1610404011634,"results":"24","hashOfConfig":"16"},{"size":3096,"mtime":1610406963782,"results":"25","hashOfConfig":"16"},{"size":365,"mtime":1610264013788,"results":"26","hashOfConfig":"16"},{"size":311,"mtime":1610050001600,"results":"27","hashOfConfig":"16"},{"size":3764,"mtime":1610398165427,"results":"28","hashOfConfig":"16"},{"size":4037,"mtime":1610395556552,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"k1fzky",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\index.js",[],["61","62"],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\App.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\firebase.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Dares.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Guess.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\DareToDo.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\NavList.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\GuessWho.js",["63"],"import React, { Component } from 'react'\r\nimport UserContext from './UserContext'\r\nimport { Link } from 'react-router-dom'\r\nimport InfoModal from './InfoModal'\r\n\r\nclass GuessWho extends Component {\r\n    static contextType = UserContext;\r\n    state = {\r\n        guessWho: [],\r\n        items: null,\r\n        index: -1,\r\n        display: '',\r\n        modalShow: false\r\n    }\r\n\r\n    //bring the data from context\r\n    componentDidUpdate() {\r\n        let data = this.context;\r\n        if (data.guess) {\r\n            if (this.state.guessWho.length === 0)\r\n                this.setState({ guessWho: data.guess.guessWho.sort(() => Math.random() - 0.5) })\r\n        }\r\n    }\r\n\r\n    //next guess button\r\n    handleClick = e => {\r\n        e.preventDefault()\r\n\r\n        this.setState(prevState => {\r\n            let display = prevState.display\r\n            if (prevState.index === prevState.guessWho.length) {\r\n                display = \"none\"\r\n            }\r\n            return {\r\n                index: prevState.index + 1,\r\n                display: display\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    setModalShow = (toggleShow) => {\r\n        this.setState({ modalShow: toggleShow })\r\n    }\r\n\r\n    render() {\r\n        // const [modalShow, setModalShow] = React.useState(false);\r\n        let output\r\n        output = this.state.guessWho.map((item, index) => {\r\n            return <div key={index}> {item.name} <img src={item.img} /> </div>\r\n        })\r\n        return (\r\n            <>\r\n                <div className=\"row justify-content-start\">\r\n                    <button className=\"info-btn main-games green col-1 text-right\" onClick={() => this.setModalShow(true)}>تفضل هنا</button>\r\n                </div>\r\n                <Link to=\"/guess\"> رجوع</Link>\r\n                <button onClick={this.handleClick} style={{ display: this.state.display }}>التالي</button>\r\n                <div>\r\n                    {output[this.state.index]}\r\n                </div>\r\n\r\n                <InfoModal\r\n                    show={this.state.modalShow}\r\n                    onHide={() => this.setModalShow(false)}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default GuessWho;\r\n","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\FirstToDo.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\GuessTheThing.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\UserContext.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\InvalidLink.js",[],"C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\Wink.js",["64","65"],"import React, { Component } from 'react'\r\nimport { Link, LinkNav } from 'react-router-dom'\r\n\r\nclass Wink extends Component {\r\n    state = {\r\n        names: ['', '', ''],\r\n        characters: [\"شايب\", \"ولد\"],\r\n        display: \"\",\r\n        display2: \"block\",\r\n        start: false,\r\n        namesOutput: null,\r\n        index: 0,\r\n        playerCard: null\r\n\r\n    }\r\n\r\n    addPlayer = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.setState({\r\n            names: [...this.state.names, \"\"]\r\n        })\r\n    }\r\n\r\n    handleChange = (e, index) => {\r\n        e.preventDefault()\r\n        this.state.names[index] = e.target.value\r\n        this.setState({ names: this.state.names })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //hide form\r\n        this.setState({\r\n            display: \"none\"\r\n        })\r\n\r\n        //random\r\n        let leng = this.state.names.length - 2\r\n        for (let i = 0; i < leng; i++) {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    characters: [...prevState.characters, \"بنت\"],\r\n                    display: \"none\"\r\n                }\r\n            })\r\n        }\r\n        this.setState({\r\n            start: true\r\n        })\r\n    }\r\n\r\n    randomPick = () => {\r\n        let characters = [...this.state.characters]\r\n        characters = characters.sort(() => Math.random() - 0.5)\r\n        let names = [...this.state.names]\r\n        const output = characters.map((ele, index) => {\r\n            return <div className=\"card\">\r\n                أنت يا {names[index]}\r\n                &nbsp; ‏تراك {characters[index]}\r\n            </div>\r\n        })\r\n        this.setState({ namesOutput: output })\r\n\r\n    }\r\n\r\n    handleClick = e => {\r\n        e.preventDefault()\r\n        this.setState(prevState => {\r\n            return { index: prevState.index + 1, playerCard: prevState.namesOutput[this.state.index] }\r\n        })\r\n        if (this.state.index === this.state.namesOutput.length - 1) {\r\n            this.setState({ display2: 'none' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Link to=\"/\"> رجوع</Link>\r\n                <form onSubmit={this.handleSubmit} style={{ display: this.state.display }}>\r\n\r\n                    {\r\n                        this.state.names.map((name, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <input type=\"text\" value={name} onChange={(e) => this.handleChange(e, index)}></input>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                    <button onClick={(e) => this.addPlayer(e)}>لاعب جديد</button>\r\n                    <button type=\"submit\">يلا نلعب</button>\r\n\r\n                </form>\r\n                <button onClick={this.randomPick}>Test</button>\r\n                <br />\r\n                <button onClick={this.handleClick} style={{ display: this.state.display2 }}>Click</button>\r\n                <div>\r\n                    {this.state.playerCard}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wink;\r\n","C:\\Users\\NOUF\\Desktop\\ReactApps\\random-games\\src\\Components\\InfoModal.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":50,"column":50,"nodeType":"72","endLine":50,"endColumn":72},{"ruleId":"73","severity":1,"message":"74","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":27,"column":9,"nodeType":"79","endLine":27,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'LinkNav' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]